import os
import django
import datetime
import pytz

# Thi·∫øt l·∫≠p m√∫i gi·ªù Vi·ªát Nam
vietnam_timezone = pytz.timezone('Asia/Ho_Chi_Minh')

# Thi·∫øt l·∫≠p m√¥i tr∆∞·ªùng Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'face_checkin.settings')
django.setup()

# Import models sau khi thi·∫øt l·∫≠p Django
from employees.models import Shift

# Danh s√°ch ca l√†m vi·ªác c·∫ßn t·∫°o
shifts = [
    # Ca h√†nh ch√≠nh
    {
        "name": "Ca H√†nh Ch√≠nh", 
        "start_time": datetime.time(8, 0), 
        "end_time": datetime.time(17, 30), 
        "description": "Ca h√†nh ch√≠nh ti√™u chu·∫©n (8:00 - 17:30), ngh·ªâ tr∆∞a 1h30p"
    },
    {
        "name": "Ca H√†nh Ch√≠nh Linh Ho·∫°t", 
        "start_time": datetime.time(7, 30), 
        "end_time": datetime.time(17, 0), 
        "description": "Ca h√†nh ch√≠nh linh ho·∫°t (7:30 - 17:00), ngh·ªâ tr∆∞a 1h30p"
    },
    
    # Ca s·∫£n xu·∫•t
    {
        "name": "Ca S√°ng", 
        "start_time": datetime.time(6, 0), 
        "end_time": datetime.time(14, 0), 
        "description": "Ca s·∫£n xu·∫•t bu·ªïi s√°ng (6:00 - 14:00)"
    },
    {
        "name": "Ca Chi·ªÅu", 
        "start_time": datetime.time(14, 0), 
        "end_time": datetime.time(22, 0), 
        "description": "Ca s·∫£n xu·∫•t bu·ªïi chi·ªÅu (14:00 - 22:00)"
    },
    {
        "name": "Ca ƒê√™m", 
        "start_time": datetime.time(22, 0), 
        "end_time": datetime.time(6, 0), 
        "description": "Ca s·∫£n xu·∫•t ban ƒë√™m (22:00 - 6:00 s√°ng h√¥m sau)"
    },
    
    # Ca ƒë·∫∑c bi·ªát
    {
        "name": "Ca N·ª≠a Ng√†y S√°ng", 
        "start_time": datetime.time(8, 0), 
        "end_time": datetime.time(12, 0), 
        "description": "Ca n·ª≠a ng√†y bu·ªïi s√°ng (8:00 - 12:00)"
    },
    {
        "name": "Ca N·ª≠a Ng√†y Chi·ªÅu", 
        "start_time": datetime.time(13, 30), 
        "end_time": datetime.time(17, 30), 
        "description": "Ca n·ª≠a ng√†y bu·ªïi chi·ªÅu (13:30 - 17:30)"
    },
    {
        "name": "Ca Cu·ªëi Tu·∫ßn", 
        "start_time": datetime.time(9, 0), 
        "end_time": datetime.time(18, 0), 
        "description": "Ca l√†m vi·ªác cu·ªëi tu·∫ßn (9:00 - 18:00)"
    },
    {
        "name": "Ca 12 Gi·ªù", 
        "start_time": datetime.time(8, 0), 
        "end_time": datetime.time(20, 0), 
        "description": "Ca d√†i 12 gi·ªù (8:00 - 20:00)"
    },
    {
        "name": "Ca Linh Ho·∫°t", 
        "start_time": datetime.time(0, 0), 
        "end_time": datetime.time(23, 59), 
        "description": "Ca linh ho·∫°t, kh√¥ng c√≥ gi·ªù c·ªë ƒë·ªãnh"
    }
]

def create_or_update_shifts():
    """T·∫°o ho·∫∑c c·∫≠p nh·∫≠t danh s√°ch ca l√†m vi·ªác"""
    created_count = 0
    updated_count = 0
    
    for shift_data in shifts:
        shift, created = Shift.objects.update_or_create(
            name=shift_data["name"],
            defaults={
                "start_time": shift_data["start_time"],
                "end_time": shift_data["end_time"],
                "description": shift_data["description"]
            }
        )
        
        if created:
            print(f"‚úÖ ƒê√£ t·∫°o ca l√†m vi·ªác: {shift.name}")
            created_count += 1
        else:
            print(f"üîÑ ƒê√£ c·∫≠p nh·∫≠t ca l√†m vi·ªác: {shift.name}")
            updated_count += 1
    
    print(f"\nüìä T·ªïng k·∫øt:")
    print(f"   - ƒê√£ t·∫°o {created_count} ca l√†m vi·ªác m·ªõi")
    print(f"   - ƒê√£ c·∫≠p nh·∫≠t {updated_count} ca l√†m vi·ªác hi·ªán c√≥")
    print(f"   - T·ªïng s·ªë ca l√†m vi·ªác: {Shift.objects.count()}")

if __name__ == "__main__":
    create_or_update_shifts()
